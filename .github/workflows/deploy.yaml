name: Deploy

on:
  push:
    branches:
      - main

env: 
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.7.3

      - name: Terraform Init
        working-directory: ./infra
        run: terraform init

      - name: Check if resources exist
        id: check_resources
        run: |
          if terraform show | grep "aws_s3_bucket.bucketS3"; then
            echo "::set-output name=resources_exist::true"
          else
            echo "::set-output name=resources_exist::false"

          if terraform show | grep "aws_s3_bucket.fila_sqs"; then
            echo "::set-output name=resources_exist::true"
          else
            echo "::set-output name=resources_exist::false"

          if terraform show | grep "aws_s3_bucket.lambda"; then
            echo "::set-output name=resources_exist::true"
          else
            echo "::set-output name=resources_exist::false"

          if terraform show | grep "aws_s3_bucket.s3_trigger"; then
            echo "::set-output name=resources_exist::true"
          else
            echo "::set-output name=resources_exist::false"

          if terraform show | grep "aws_s3_bucket.aws_lambda_permissao_evento_s3"; then
            echo "::set-output name=resources_exist::true"
          else
            echo "::set-output name=resources_exist::false"

          if terraform show | grep "aws_s3_bucket.assume_role"; then
            echo "::set-output name=resources_exist::true"
          else
            echo "::set-output name=resources_exist::false"

          if terraform show | grep "aws_s3_bucket.iam_lambda"; then
            echo "::set-output name=resources_exist::true"
          else
            echo "::set-output name=resources_exist::false"

          if terraform show | grep "aws_s3_bucket.lambda_policy_document"; then
            echo "::set-output name=resources_exist::true"
          else
            echo "::set-output name=resources_exist::false"

          if terraform show | grep "aws_s3_bucket.lambda_policy"; then
            echo "::set-output name=resources_exist::true"
          else
            echo "::set-output name=resources_exist::false"

          if terraform show | grep "aws_s3_bucket.attachment-policy-lambda"; then
            echo "::set-output name=resources_exist::true"
          else
            echo "::set-output name=resources_exist::false"

      - name: Apply Terraform
        if: steps.check_resources.outputs.resources_exist != 'true'
        run: terraform apply -auto-approve

      - name: Terraform Plan
        working-directory: ./infra
        run: terraform plan

      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && github.actor != 'github-actions[bot]'
        working-directory: ./infra
        run: terraform apply -auto-approve
